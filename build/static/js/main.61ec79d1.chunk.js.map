{"version":3,"sources":["components/layout/Navbar.js","customHook/useInput.js","components/home/Form.js","store/actions/noteAction.js","components/notes/Note.js","components/notes/NotesList.js","components/home/Home.js","components/notes/Favorites.js","components/notes/NoteDetail.js","components/notes/EditForm.js","App.js","reportWebVitals.js","store/reducers/noteReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["Navbar","className","to","id","useInput","initialValue","useState","value","setValue","reset","bind","onChange","e","target","Form","title","bindTitle","resetTitle","content","bindContent","resetContent","dispatch","useDispatch","onSubmit","note","preventDefault","getState","getFirestore","collection","add","favorite","createdAt","Date","then","console","log","catch","err","type","htmlFor","Note","heartMarkup","style","cursor","onClick","favStatus","doc","update","toggleFav","delete","deleteNote","moment","toDate","fromNow","payload","NotesList","notes","map","Home","useFirestoreConnect","orderBy","useSelector","state","firestore","ordered","Favorites","where","storeAs","favnotes","NoteDetail","props","match","params","data","isLoaded","isEmpty","calendar","EditForm","history","useHistory","updateNote","push","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","note_to_edit","noteReducer","action","rootReducer","combineReducers","firebase","firebaseReducer","firestoreReducer","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","store","createStore","compose","applyMiddleware","thunk","withExtraArgument","getFirebase","reduxFirestore","fbConfig","rrfProps","config","createFirestoreInstance","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61ec79d1.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nconst Navbar = () => {\r\n    return (\r\n        <div>\r\n            <nav className=\"green\">\r\n                <div className=\"nav-wrapper\">\r\n                    <Link to=\"/\" className=\"brand-logo\">Notebook</Link>\r\n                    <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                        <li><NavLink to=\"/favorites\">Favorites</NavLink></li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import { useState } from 'react'\r\n\r\nconst useInput = (initialValue = '') => {\r\n    const [value, setValue] = useState(initialValue)\r\n    const reset = () => {\r\n        setValue(initialValue)\r\n    }\r\n    const bind = {\r\n        value,\r\n        onChange: (e) => {\r\n            setValue(e.target.value)\r\n        }\r\n    }\r\n    return [value, bind, reset]\r\n}\r\n\r\nexport default useInput","import React from 'react'\r\nimport useInput from '../../customHook/useInput'\r\nimport { addNote } from '../../store/actions/noteAction'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst Form = () => {\r\n    const [title, bindTitle, resetTitle] = useInput()\r\n    const [content, bindContent, resetContent] = useInput()\r\n    const dispatch = useDispatch()\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        dispatch(addNote({ title, content }))\r\n        resetTitle()\r\n        resetContent()\r\n    }\r\n    return (\r\n        <div className=\"section\">\r\n            <form onSubmit={handleSubmit} className=\"white\">\r\n\r\n                <h5 className=\"grey-text text-darken-3\">New Note</h5>\r\n\r\n                <div className=\"input-field\">\r\n                    <input id=\"note_title\" type=\"text\" className=\"validate\" {...bindTitle} />\r\n                    <label htmlFor=\"note_title\">Note Title</label>\r\n                </div>\r\n\r\n                <div className=\"input-field\">\r\n                    <textarea id=\"note_content\" className=\"materialize-textarea\" {...bindContent}></textarea>\r\n                    <label htmlFor=\"note_content\">Note Content</label>\r\n                </div>\r\n\r\n                <button className=\"btn green\">Add</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","export const addNote = (note) => {\r\n    return (dispatch, getState, { getFirestore }) => {\r\n        const firestore = getFirestore()\r\n        firestore.collection('notes')\r\n            .add({\r\n                ...note,\r\n                favorite: false,\r\n                createdAt: new Date()\r\n            })\r\n            .then(() => {\r\n                console.log('Note Added Successfully')\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n}\r\n\r\nexport const deleteNote = (note) => {\r\n    return (dispatch, getState, { getFirestore }) => {\r\n        const firestore = getFirestore()\r\n        firestore.collection('notes').doc(note.id).delete()\r\n            .then(() => {\r\n                console.log('Note Deleted')\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n}\r\n\r\nexport const toggleFav = (note) => {\r\n    return (dispatch, getState, { getFirestore }) => {\r\n        const favStatus = !note.favorite\r\n        const firestore = getFirestore()\r\n        firestore.collection('notes').doc(note.id)\r\n            .update({\r\n                favorite: favStatus\r\n            })\r\n            .then(() => {\r\n                console.log('Toggle Fav Success')\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateNote = (note) => {\r\n    return (dispatch, getState, { getFirestore }) => {\r\n        const firestore = getFirestore()\r\n        firestore.collection('notes').doc(note.id)\r\n            .update({\r\n                title: note.title,\r\n                content: note.content\r\n            })\r\n            .then(() => {\r\n                console.log('Update Success')\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n}","import React from 'react'\r\nimport moment from 'moment'\r\nimport { deleteNote, toggleFav } from '../../store/actions/noteAction'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Note = ({ note }) => {\r\n    const dispatch = useDispatch()\r\n    const deleteNoteHandler = () => {\r\n        dispatch(deleteNote(note))\r\n    }\r\n    const toggleFavHandler = () => {\r\n        dispatch(toggleFav(note))\r\n    }\r\n    const editNoteHandler = () => {\r\n        console.log('edit note handler')\r\n        dispatch({ type: 'EDIT_NOTE', payload: note })\r\n    }\r\n    const heartMarkup = note.favorite ? 'favorite' : 'favorite_border'\r\n    return (\r\n        <div className=\"note white\">\r\n            <div className=\"right-align\">\r\n                <i className=\"material-icons red-text\" style={{ cursor: 'pointer' }} onClick={toggleFavHandler}>{heartMarkup}</i>\r\n                <i className=\"material-icons\" style={{ cursor: 'pointer' }} onClick={deleteNoteHandler}>delete</i>\r\n            </div>\r\n            <Link to={\"/note/\" + note.id}>\r\n                <h5 className=\"black-text\">{note.title}</h5>\r\n            </Link>\r\n            <p className=\"truncate\">{note.content}</p>\r\n            <p className=\"grey-text\">{moment(note.createdAt.toDate()).fromNow()}</p>\r\n            <div className=\"right-align\">\r\n                <Link to={`/editform/${note.id}`} >\r\n                    <i className=\"material-icons black-text\" style={{ cursor: 'pointer' }} onClick={editNoteHandler}> edit</i>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note\r\n","import React from 'react'\r\nimport Note from './Note'\r\nconst NotesList = ({ notes }) => {\r\n    return (\r\n        <div className=\"noteslist\">\r\n            {notes && notes.map(note => <Note note={note} key={note.id} />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotesList\r\n","import React from 'react'\r\nimport Form from './Form'\r\nimport { useSelector } from 'react-redux'\r\nimport { useFirestoreConnect } from 'react-redux-firebase'\r\nimport NoteList from '../notes/NotesList'\r\n\r\nconst Home = () => {\r\n    useFirestoreConnect([{ collection: 'notes', orderBy: ['createdAt', 'desc'] }])\r\n    const notes = useSelector((state) => state.firestore.ordered.notes)\r\n    console.log(notes)\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row center-align\">\r\n                <div className=\"col s7\"><Form /></div>\r\n                <div className=\"col s5\"><NoteList notes={notes} /></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useFirestoreConnect } from 'react-redux-firebase'\r\nimport NotesList from './NotesList'\r\nconst Favorites = () => {\r\n    useFirestoreConnect([{ collection: 'notes', where: ['favorite', '==', true], orderBy: ['createdAt', 'desc'], storeAs: 'favnotes' }])\r\n    const favnotes = useSelector(state => state.firestore.ordered.favnotes)\r\n    console.log(favnotes)\r\n    return <NotesList notes={favnotes} />\r\n}\r\n\r\nexport default Favorites\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useFirestoreConnect, isLoaded, isEmpty } from 'react-redux-firebase'\r\nimport moment from 'moment'\r\n\r\nconst NoteDetail = (props) => {\r\n    const id = props.match.params.id\r\n    useFirestoreConnect([{ collection: 'notes', doc: id }])\r\n    const note = useSelector(({ firestore: { data } }) => data.notes && data.notes[id])\r\n    const noteMarkup = !isLoaded(note) ? (\r\n        <div className=\"container section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card title\">Loading...</span>\r\n                </div>\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) : isEmpty(note) ? (\r\n        <div className=\"container section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card title\">The Note Content is Empty.</span>\r\n                </div>\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <div className=\"container section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card title\">{note.title}</span>\r\n                    <p>{note.content}</p>\r\n                </div>\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                    <div>{moment(note.createdAt.toDate()).calendar()}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n    return noteMarkup\r\n}\r\n\r\nexport default NoteDetail\r\n","import React from 'react'\r\nimport useInput from '../../customHook/useInput'\r\nimport { updateNote } from '../../store/actions/noteAction'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst EditForm = (props) => {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch()\r\n    const note = useSelector((state) => state.note);\r\n    console.log(note.title)\r\n    const [title, bindTitle, resetTitle] = useInput(note.title);\r\n    const [content, bindContent, resetContent] = useInput(note.content);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log('handle update')\r\n        dispatch(updateNote({ id: note.id, title, content }))\r\n        resetTitle()\r\n        resetContent()\r\n        history.push('/')\r\n\r\n    }\r\n    return (\r\n        <div className=\"section\">\r\n            <form onSubmit={handleSubmit} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3 \">Update Note </h5>\r\n                <div className=\"input-field \">\r\n                    <input id=\"first_name\" type=\"text\" className=\"validate\" {...bindTitle} />\r\n                    <label htmlFor=\"note_title\" className=\"active\">Note Title </label>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <textarea id=\"textarea1\" className=\"materialize-textarea\" {...bindContent} >  </textarea>\r\n                    <label htmlFor=\"textarea1 \" className=\"active\">Note Content</label>\r\n                </div>\r\n                <button className=\"btn green\">Update </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditForm\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport Navbar from './components/layout/Navbar'\r\nimport Home from './components/home/Home'\r\nimport Favorites from './components/notes/Favorites'\r\nimport NoteDetail from './components/notes/NoteDetail'\r\nimport EditForm from './components/notes/EditForm'\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route exact path='/' component={Home} />\r\n        <Route path='/favorites' component={Favorites} />\r\n        <Route path='/note/:id' component={NoteDetail} />\r\n        <Route path='/editform/:id' component={EditForm} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialState = {\r\n    note_to_edit: {}\r\n}\r\nconst noteReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"EDIT_NOTE\":\r\n            console.log('note reducer', action.payload)\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default noteReducer\r\n","import { combineReducers } from 'redux'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport noteReducer from './noteReducer'\r\nconst rootReducer = combineReducers({\r\n    note: noteReducer,\r\n    firebase: firebaseReducer,\r\n    firestore: firestoreReducer // <- needed if using firestore\r\n})\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDxBPtdDOrwreBIaWMzHL0RbnN1NLgmbQo\",\r\n    authDomain: \"notes-taking-app-7ac79.firebaseapp.com\",\r\n    projectId: \"notes-taking-app-7ac79\",\r\n    storageBucket: \"notes-taking-app-7ac79.appspot.com\",\r\n    messagingSenderId: \"67563829692\",\r\n    appId: \"1:67563829692:web:5148a0e0b052e3590d13b9\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport rootReducer from './store/reducers/rootReducer'\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport firebase from 'firebase/app'\r\nimport fbConfig from './config/fbConfig'\r\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase'\r\nimport { createFirestoreInstance, getFirestore, reduxFirestore } from 'redux-firestore'\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n    reduxFirestore(fbConfig) // redux bindings for firestore\r\n  )\r\n);\r\n\r\nconst rrfProps = {\r\n  firebase,\r\n  config: fbConfig,\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance // <- needed if using firestore\r\n}\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ReactReduxFirebaseProvider {...rrfProps}>\r\n      <React.StrictMode>\r\n        <App />\r\n      </React.StrictMode>,\r\n    </ReactReduxFirebaseProvider>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}